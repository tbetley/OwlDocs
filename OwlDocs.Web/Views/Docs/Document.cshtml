@model OwlDocument
@{
    ViewData["Title"] = Model.Name;
}

<div class="container">
    <div class="row align-items-center justify-content-end">
        <div class="col">
            <h2>@Model.Name</h2>
        </div>
        <div class="col-auto">
            <button id="toggleEdit" class="btn btn-sm btn-outline-danger">Edit</button>
            <button id="saveEdit" class="btn btn-sm btn-outline-info d-none">Save</button>
        </div>
    </div>
    <hr />
    <div id="content" class="content-mode">
        @Html.Raw(@Model.Html)
    </div>
    <div id="edit" data-id="@Model.Id" data-parent-id="@Model.ParentId" data-name="@Model.Name" class="edit-mode d-none">
        <textarea id="editTextarea" class="w-100">@Model.Markdown</textarea>
    </div>
</div>


<script>
    let textarea = document.getElementById("editTextarea");

    document.getElementById("toggleEdit").addEventListener("click", function (e) {
        document.getElementById("content").classList.toggle("d-none");
        document.getElementById("edit").classList.toggle("d-none");
        document.getElementById("saveEdit").classList.toggle("d-none");

        if (this.textContent == "Edit") {
            this.textContent = "Cancel";
            textarea.style.height = "";
            textarea.style.height = (textarea.scrollHeight + 100) + "px";
        }
        else
            this.textContent = "Edit";
    })


    textarea.addEventListener("input", function (e) {
        this.style.height = "";
        this.style.height = (this.scrollHeight + 100) + "px";
    })

    // add keypress for saving
    textarea.addEventListener('keydown', async function (e) {
        if ((e.key == 83 || e.keyCode == 83) && e.ctrlKey) {
            event.preventDefault();
            await saveDocument();
        }
    })

    document.getElementById("saveEdit").addEventListener("click", async function (e) {
        await saveDocument();
    })

    const saveDocument = async function () {
        const editContent = document.getElementById("edit");

        let data = {};
        data.Id = editContent.getAttribute("data-id");
        data.Markdown = textarea.value;
        data.Name = editContent.getAttribute("data-name");
        console.log(data);

        const result = await fetch("/Docs", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        });

        if (result.ok) {
            location.reload();
        }
        else {
            alert(result.statusText);
        }
    }
</script>